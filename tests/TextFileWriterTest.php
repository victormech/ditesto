<?php

namespace Test\DiTesto;

use LazyEight\DiTesto\Exceptions\IOException;
use LazyEight\DiTesto\Line;
use LazyEight\DiTesto\TextFile;
use LazyEight\DiTesto\TextFileWriter;
use PHPUnit\Framework\TestCase;

class TextFileWriterTest extends TestCase
{
    /**
     * @var string
     */
    protected $file = './tests/files/urls.txt';

    /**
     * @var string
     */
    protected $path = './tests/files';

    /**
     * @var string
     */
    protected $newFilename = 'newFilename.txt';

    /**
     * @var string
     */
    protected $testLine = 'THIS IS A TEST LINE';

    /**
     * @covers \LazyEight\DiTesto\TextFileWriter::writeFile
     * @uses \LazyEight\DiTesto\TextFileWriter
     */
    public function testWriteFile()
    {
        $newFilename = $this->path . '/' . $this->newFilename;
        $textFile = new TextFile($newFilename);
        $textFile[] = new Line($this->testLine);

        $textFileWriter = new TextFileWriter();
        $textFileWriter->writeFile($textFile);

        $this->assertTrue($textFile->exists());
    }

    /**
     * @covers \LazyEight\DiTesto\TextFileWriter::writeFile
     * @uses \LazyEight\DiTesto\TextFileWriter
     * @expectException IOException
     */
    public function testCantWriteFile()
    {
        $path = $this->path . '/' . 'newPath';
        mkdir($path);
        chmod($path, 0555);

        $newFilename = $path . '/' . $this->newFilename;
        $textFile = new TextFile($newFilename);
        $textFile[] = new Line($this->testLine);

        $this->expectException(IOException::class);
        (new TextFileWriter())->writeFile($textFile);
    }

    /**
     * @inheritDoc
     */
    public static function tearDownAfterClass()
    {
        $file = './tests/files/newFilename.txt';
        $newFilePath = './tests/files/newPath';

        if (file_exists($file)) {
            unlink($file);
        }

        if (file_exists($newFilePath)) {
            rmdir($newFilePath);
        }

        parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
    }
}
